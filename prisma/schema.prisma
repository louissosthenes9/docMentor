// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id    String @id @unique
  email String @unique

  File File[]

  Message Message[]

  stripeCustomerId        String?   @unique @map(name: "Stripe_customer_id")
  StripeSubscriptionId    String?   @unique @map(name: "Stripe_subcription_id")
  StripePriceId           String?   @map(name: "Stripe_price_id")
  StripeCurrentPeriodEndd DateTime? @map(name: "Stripe_current_period_end")
}

enum UploadStatus {
  PENDING
  PROCESSING
  FAILED
  SUCCESS
}

model File {
  id           String       @id @default(cuid())
  userId       String?
  name         String
  uploadStatus UploadStatus @default(PENDING)

  url  String
  User User?  @relation(fields: [userId], references: [id])
  key  String

  Messages Message[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Message {
  id   String @id @default(cuid())
  text String @db.Text()

  isUserMessage Boolean

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  User   User?   @relation(fields: [userId], references: [id])
  userId String?
  File   File?   @relation(fields: [fileId], references: [id])
  fileId String?
}
